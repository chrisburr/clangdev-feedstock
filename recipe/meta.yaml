{% set version = "5.0.0" %}
{% set sha256 = "019f23c2192df793ac746595e94a403908749f8e0c484b403476d2611dd20970" %}

{% set build_number = os.environ.get("ROOT_CONDA_BUILD_NUMBER", "1008") %}

{%- if "ROOT_CONDA_GIT_REV" in os.environ %}
  {% set clang_variant = "root_" + os.environ["ROOT_CONDA_GIT_REV"] %}
{%- endif %}

{% if not clang_variant %}
{% set clang_variant = "default" %}
{% endif %}

package:
  name: clangdev_and_clangvariant
  version: {{ version }}

source:
{% if clang_variant == "default" %}
  url: http://llvm.org/releases/{{ version }}/cfe-{{ version }}.src.tar.xz
  sha256: {{ sha256 }}
{% elif clang_variant.startswith("cling") %}
  git_url: http://root.cern.ch/git/clang.git
  git_rev: {{ clang_variant|replace('cling_', 'cling-') }}
{% elif clang_variant.startswith("root_20190625") %}
  git_url: https://github.com/root-project/root.git
  git_rev: 6b8f54808eb13103e87cae19c642aec474270422
  folder: root-source
{% elif clang_variant.startswith("root_20191220") %}
  git_url: https://github.com/root-project/root.git
  git_rev: fde5aa88ea02dfcd9fe20c346ece1c2b6aabfe6d
  folder: root-source
{% elif clang_variant.startswith("root") %}
  git_url: {{ os.environ.get("ROOT_CONDA_GIT_URL", "https://github.com/root-project/root.git") }}
  git_rev: {{ os.environ.get("ROOT_CONDA_GIT_REV", "c100d61bd56d05058843da021cf1f740166aad38") }}
  folder: root-source
{% endif %}

build:
  number: {{ build_number }}
  skip: true  # [win and vc<14]

# Specifying `compiler('cxx')` as a top-level build requirements to force
# conda-smithy to generate the correct build matrix.
requirements:
  build:
    - {{ compiler('cxx') }}

outputs:

  # Main output
  - name: clangdev
    version: {{ version }}
    script: build_clangdev.sh  # [unix]
    script: build_clangdev.bat  # [win]
    build:
      activate_in_script: True
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake >=3.4.3
        # Needed to unpack the source tarball
        - m2w64-xz  # [win]
        # "compiling .pyc files" fails without this
        - python >3
      host:
        - llvmdev =={{ version }}
        - libxml2  # [osx]
      run:
        - {{ compiler('cxx') }}  # [linux and cxx_compiler=='gxx']
        - zlib  # [osx]
        # Require the mutex package.
        - clang_variant * {{ clang_variant }}
    test:
      requires:
        - {{ compiler('cxx') }}  # [linux]
      files:
        - mytest.c
      commands:
        - $PREFIX/bin/clang --version  # [unix]
        - $PREFIX/bin/clang++ --version  # [unix]
        - $PREFIX/bin/clang-check --version  # [unix]

        - $PREFIX/bin/clang -v -c mytest.c      # [unix]
        - "%LIBRARY_BIN%/clang -v -c mytest.c"  # [win]

        - if not exist %LIBRARY_INC%\\clang\\Lex\\Lexer.h exit 1  # [win]
        - test -f $PREFIX/include/clang/Lex/Lexer.h      # [unix]
        - test -f $PREFIX/lib/libclangBasic.a            # [unix]

  # Mutex package to keep only one variant of clangdev in a given environment.
  #
  # Non-default variants track the "non_default_clang" feature.
  # This is used to weigh down non-default variants of the package, allowing
  # the default variant to take precedence unless required explicitly.
  - name: clang_variant
    version: 1.0
    build:
      string: {{ clang_variant }}
{% if clang_variant != "default" %}
      track_features:
        - non_default_clang
{% endif %}

about:
  home: http://llvm.org/
  license: NCSA
{% if not clang_variant.startswith("root") %}
  license_file: LICENSE.TXT
{% else %}
  license_file: root-source/interpreter/llvm/src/tools/clang/LICENSE.TXT
{% endif %}
  summary: Development headers and libraries for Clang

extra:
  recipe-maintainers:
    - inducer
    - isuruf
    - jakirkham
    - mattwala
    - SylvainCorlay
